{"mappings":"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","sources":["src/js/modal_markup.js","node_modules/@parcel/runtime-js/lib/runtime-c47a0aa6b98f502f.js","node_modules/@parcel/runtime-js/lib/runtime-0bf49f18be33be04.js","node_modules/@parcel/runtime-js/lib/runtime-2c2563dd8fb56669.js"],"sourcesContent":["import CocktailAPI from './service/getCocktail';\nimport { renderMarkup, onAddBtnClick } from './service/create-markup';\nimport emptyHeart from '../images/hearts/empty-heart.png';\nimport fullHeart from '../images/hearts/full-heart.png';\nimport { shouldBeActivated } from '../js/service/create-markup';\n\nexport const refs = {\n  cocktailsList: document.querySelector('.cocktails__list'),\n  backdropT: document.querySelectorAll('[data-inner-modal]'),\n  modalContainer: document.querySelector('.modal-coctails'),\n  modalIngrContainer: document.querySelector('.backdrop-modal-components'),\n  backdrop: document.querySelector('[data-inner-modal]'),\n  closeBtn: document.querySelector('[data-inner-modal-close]'),\n  openModalIngrdients: document.querySelectorAll('[data-modal-open]'),\n  scaleModal: document.querySelector('[data-modal-scale]'),\n};\n\nconst cocktailAPI = new CocktailAPI();\n\nfunction createModalMarkup(response) {\n  return response.data.drinks\n    .map(drink => {\n      return `\n      <h2 class=\"modal-coctail-name dark--title\">${drink.strDrink}</h2>\n      <h3 class=\"modal-ingredients dark--title\">Ingredients</h3>\n\n      <p class=\"modal-per dark--text\">Per cocktail</p>     \n\n        <ul class=\"modal-coctail-components dark--text\">\n        </ul>\n      <img src=\"${drink.strDrinkThumb}\" alt=\"cocktail\" class=\"modal-img\" />\n      <h3 class=\"modal-Instractions dark--title\">Instructions:</h3>\n      <p class=\"modal-text dark--text\">\n        ${drink.strInstructions}\n      </p>\n       <button type=\"button\" class=\"modal-button cocktails__btn dark--btn-back js-add-btn-modal transparent ${shouldBeActivated(\n         drink.idDrink,\n         'cocktails'\n       )}\" data-id=\"${drink.idDrink}\">\n              <span class=\"cocktails__button-text\">Add to</span>  \n              <img class=\"empty-heart\" data-toggle=\"hidden-hearFt\" src=\"${emptyHeart}\" alt=\"\" width=\"18\" height=\"18\"/>\n              <img class=\"full-heart\" data-toggle=\"empty-heart\" src=\"${fullHeart}\" alt=\"\" width=\"18\" height=\"18\"/> \n            </button>`;\n    })\n    .join('');\n}\n\nfunction toIdentifyStrType(ingredient) {\n  return ingredient.strType === null\n    ? 'Cannot say anything about its type'\n    : ingredient.strType;\n}\n\nfunction toMakeDescriptionText(ingredient) {\n  return ingredient.Description === null\n    ? 'Sorry, guys we do not know anything about that'\n    : ingredient.strDescription;\n}\n\nfunction createIngredientsMarkup(ingredients) {\n  console.log(ingredients);\n  return ingredients.data.ingredients\n    .map(ingredient => {\n      return `<div class=\"ingredient-modal-wrap\">\n  <img class=\"ingredient-modal-pic\" src='https://www.thecocktaildb.com/images/ingredients/${\n    ingredient.strIngredient\n  }-Small.png'\n  alt=${ingredient.strIngredient}></div>\n      <div inner-modal-container dark--modal-back\"><div class=\"ingr-modal-title-wrapper\">\n  <h3 class=\"inner-modal-name dark--title\">${toIdentifyStrType(ingredient)}</h3>\n  <h4 class=\"inner-modal-passage dark--text\">\n    ${ingredient.strIngredient}\n\n  </h4>\n  <div class=\"border\"></div>\n</div>\n<div class=\"modal-ingredients-desc\">\n\n<p class=\"inner-modal-text dark--text\">\n  ${toMakeDescriptionText(ingredient)}\n</p>\n<ul class=\"ingredients-modal-list\">\n\n  <li class=\"inner-modal-ingredients dark--text\"\">\n    ✶ <b>Type</b>: ${toIdentifyStrType(ingredient)}\n  </li>\n  <li class=\"inner-modal-ingredients dark--text\">\n    ✶ <b>Country of origin</b>: Sorry, not specified\n  </li>\n  <li class=\"inner-modal-ingredients dark--text\">✶ <b>Alcohol</b> : ${\n    ingredient.strAlcohol\n  }</li>\n\n</ul>\n</div>\n<button id=${\n        ingredient.idIngredient\n      } type=\"button\" data-modal-c class=\"ingredients-modal-btn cocktails__btn dark--btn-back transparent ${shouldBeActivated(\n        ingredient.idIngredient,\n        'ingredients'\n      )}\">\n              <span class=\"cocktails__button-text\">Add to</span>  \n              <img class=\"empty-heart\" data-toggle=\"hidden-hearFt\" src=\"${emptyHeart}\" alt=\"\" width=\"18\" height=\"18\"/>\n              <img class=\"full-heart\" data-toggle=\"empty-heart\" src=\"${fullHeart}\" alt=\"\" width=\"18\" height=\"18\"/> \n            </button>`;\n    })\n    .join('');\n}\n\nexport async function onOpenModalClick(e) {\n  if (e.target.className === 'cocktails__button-text') {\n    try {\n      cocktailAPI.id = e.target.id;\n      const responseID = await cocktailAPI.getCocktailsId();\n      const modalMarkup = createModalMarkup(responseID);\n      renderMarkup(refs.modalContainer, modalMarkup);\n\n      const ingrWrap = document.querySelector('.modal-coctail-components');\n      const backdrop = document.querySelector('[data-modal]');\n      backdrop.classList.remove('is-hidden-modal-coctails');\n\n      const markupIngredientsList =\n        await createMarkupCocktailForModalListIngredients(responseID);\n      renderMarkup(ingrWrap, markupIngredientsList);\n      ingrWrap.addEventListener('click', onIngredientClick);\n\n      (() => {\n        const refs = {\n          backdrop: document.querySelector('[data-modal]'),\n          closeBtn: document.querySelector('[data-modal-close]'),\n        };\n\n        refs.closeBtn.addEventListener('click', closeModal);\n\n        function closeModal() {\n          refs.backdrop.classList.add('is-hidden-modal-coctails');\n        }\n      })();\n      // document.addEventListener('keydown', onCloseEsc);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\nfunction createMarkupCocktailForModalListIngredients(res) {\n  const drink = res.data.drinks[0];\n  console.log(drink);\n  const ingredients = [];\n\n  for (let i = 1; i <= 15; i += 1) {\n    let ingredient = drink['strIngredient' + i];\n    if (!ingredient) break;\n    ingredients.push(ingredient);\n    console.log(ingredients);\n  }\n  return ingredients\n    .map(ingredient => {\n      return /*html*/ `<li \"${ingredient}\" class=\"modal-coctail-component\" data-modal-open>${ingredient}</li>`;\n    })\n    .join('');\n}\n\n//        -------------------Click on List of Ingredients in Modal #1-------------------\nasync function onIngredientClick(e) {\n  try {\n    const ingredient = e.target.textContent;\n    const responseIngredient = await cocktailAPI.getCocktailByIngredient(\n      ingredient\n    );\n    const ingredientsContainer = document.querySelector(\n      '.inner-modal-container'\n    );\n    const markup = createIngredientsMarkup(responseIngredient);\n    renderMarkup(ingredientsContainer, markup);\n    const backdrop = document.querySelector('[data-inner-modal]');\n    backdrop.classList.remove('is-hidden-inner-modal');\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// export function onCloseEsc(e) {\n//   console.dir(e);\n//   if (e.code === 'Escape') {\n//     document.body.classList.remove('modal-open');\n//     backdrop.classList.add('is-hidden');\n//     // modalIngr.classList.add('is-hidden');\n//     cocktailModalMain.classList.remove('is-hidden');\n//     document.removeEventListener('keydown', onCloseEsc);\n//   }\n// }\n\n//                  -------------------Listeners-------------------\nrefs.cocktailsList.addEventListener('click', onOpenModalClick);\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hfjDg\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3hIJm\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"jRqaA\\\":\\\"coctail-fav.343d0c04.js\\\",\\\"hfjDg\\\":\\\"empty-heart.2d48ba79.png\\\",\\\"3hIJm\\\":\\\"full-heart.cce94d73.png\\\"}\"));"],"names":["$bysyV","parcelRequire","$bcdfa38c8be2b105$export$21666b427502ea6d","cocktailsList","document","querySelector","backdropT","querySelectorAll","modalContainer","modalIngrContainer","backdrop","closeBtn","openModalIngrdients","scaleModal","$bcdfa38c8be2b105$var$cocktailAPI","default","$bcdfa38c8be2b105$var$toIdentifyStrType","ingredient","strType","async","$bcdfa38c8be2b105$var$onIngredientClick","e","target","textContent","responseIngredient","getCocktailByIngredient","ingredientsContainer","markup","ingredients","console","log","data","map","strIngredient","Description","strDescription","$bcdfa38c8be2b105$var$toMakeDescriptionText","strAlcohol","idIngredient","$7Cc8g","shouldBeActivated","$parcel$interopDefault","$gBiQC","$afBUB","join","renderMarkup","classList","remove","error","Error","message","addEventListener","className","id","responseID","getCocktailsId","modalMarkup","drinks","drink","strDrink","strDrinkThumb","strInstructions","idDrink","ingrWrap","markupIngredientsList","res","i","push","$bcdfa38c8be2b105$var$createMarkupCocktailForModalListIngredients","refs","add","module","exports","URL","resolve","import","meta","url","toString","register","JSON","parse"],"version":3,"file":"coctail-fav.343d0c04.js.map"}